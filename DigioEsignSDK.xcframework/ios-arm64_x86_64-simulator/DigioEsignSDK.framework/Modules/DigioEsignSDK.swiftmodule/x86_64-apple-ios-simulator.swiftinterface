// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios12.1-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name DigioEsignSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import DigioEsignSDK
import Foundation
import JavaScriptCore
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
public class DigioBuilder {
  public init()
  public func setLogo(logo: Swift.String?) -> DigioEsignSDK.DigioBuilder
  public func setEnvironment(environment: DigioEsignSDK.DigioEnvironment) -> DigioEsignSDK.DigioBuilder
  public func setDocumentId(documentId: Swift.String) -> DigioEsignSDK.DigioBuilder
  public func setIdentifier(identifier: Swift.String) -> DigioEsignSDK.DigioBuilder
  public func setTokenId(tokenId: Swift.String?) -> DigioEsignSDK.DigioBuilder
  public func withController(viewController: UIKit.UIViewController) -> DigioEsignSDK.DigioBuilder
  public func setServiceMode(serviceMode: DigioEsignSDK.DigioServiceMode) -> DigioEsignSDK.DigioBuilder
  public func setPrimaryColor(hexColor: Swift.String) -> DigioEsignSDK.DigioBuilder
  public func setFontFormat(fontFormat: Swift.String) -> DigioEsignSDK.DigioBuilder
  public func setFontFamily(fontFamily: Swift.String) -> DigioEsignSDK.DigioBuilder
  public func setFontUrl(fontUrl: Swift.String) -> DigioEsignSDK.DigioBuilder
  public func setDelegate(delegate: DigioEsignSDK.DigioEsignDelegate) -> DigioEsignSDK.DigioBuilder
  public static func getCurrentSdkVersion() -> Swift.String
  public func setAdditionalParams(additionalParams: [Swift.String : Swift.String]) -> DigioEsignSDK.DigioBuilder
  public func build()
  @objc deinit
}
public enum DigioServiceMode : Swift.String {
  case OTP
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum DigioEnvironment : Swift.String {
  case PRODUCTION
  case SANDBOX
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol DigioEsignDelegate {
  func onDigioResponseSuccess(response: Swift.String)
  func onDigioResponseFailure(response: Swift.String)
  func onGatewayEvent(event: Swift.String)
}
extension DigioEsignSDK.DigioServiceMode : Swift.Equatable {}
extension DigioEsignSDK.DigioServiceMode : Swift.Hashable {}
extension DigioEsignSDK.DigioServiceMode : Swift.RawRepresentable {}
extension DigioEsignSDK.DigioEnvironment : Swift.Equatable {}
extension DigioEsignSDK.DigioEnvironment : Swift.Hashable {}
extension DigioEsignSDK.DigioEnvironment : Swift.RawRepresentable {}
